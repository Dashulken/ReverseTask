// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReverseTask;

#nullable disable

namespace ReverseTask.Migrations
{
    [DbContext(typeof(ReverseTaskDbContext))]
    partial class ReverseTaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ReverseTask.Models.Concentration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("C1A")
                        .HasColumnType("double");

                    b.Property<double>("C1C")
                        .HasColumnType("double");

                    b.Property<double>("C2A")
                        .HasColumnType("double");

                    b.Property<double>("C2C")
                        .HasColumnType("double");

                    b.Property<int>("DataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("Concentrations");
                });

            modelBuilder.Entity("ReverseTask.Models.Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("AdequacyCriterion")
                        .HasColumnType("double");

                    b.Property<double>("StopCriterion")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Datas");
                });

            modelBuilder.Entity("ReverseTask.Models.Concentration", b =>
                {
                    b.HasOne("ReverseTask.Models.Data", "Data")
                        .WithMany("Concentrations")
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Data");
                });

            modelBuilder.Entity("ReverseTask.Models.Data", b =>
                {
                    b.Navigation("Concentrations");
                });
#pragma warning restore 612, 618
        }
    }
}
